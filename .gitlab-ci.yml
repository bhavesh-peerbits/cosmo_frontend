stages:
  - sonar
  - build_code 🔨
  - build_docker 🐳
  - test ✅
  - tag 🔖
  - deploy 🚀
#  - pages 🌎

variables:
  BASE_IMAGE: aramis-nexus.aizoon.it:5000/cosmo/fe
  IMAGE_COSMO: $BASE_IMAGE/${CI_COMMIT_REF_SLUG}
  TAG_IMAGE: $BASE_IMAGE:${CI_COMMIT_TAG}

sonar:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  variables:
    GIT_DEPTH: 0
  stage: sonar
  script:
    - sonar-scanner -Dsonar.projectKey=cosmo-fe -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - develop

image: node:lts-alpine

build:
  stage: build_code 🔨
  variables:
    http_proxy: http://srvprx01.aizoon.it:3128
    https_proxy: http://srvprx01.aizoon.it:3128
    no_proxy: localhost,127.0.0.1,*.aizoon.it
  before_script:
    - yarn install
  script: yarn build
  artifacts:
    expire_in: 1 day
    paths:
      - app/dist/
      - packages/server/dist/

build_image:
  image: docker:19.03.8
  stage: build_docker 🐳
  script:
    - docker build --label "git-commit=${CI_COMMIT_SHORT_SHA}" -t $BASE_IMAGE/${CI_COMMIT_REF_SLUG} .
    - docker tag $BASE_IMAGE/${CI_COMMIT_REF_SLUG} $IMAGE_COSMO
    - docker push $BASE_IMAGE/${CI_COMMIT_REF_SLUG}
    - docker push $IMAGE_COSMO

trivy scan:
  image:
    name: aramis-nexus.aizoon.it:5000/esra/trivy:0.22.0
    entrypoint: ['']
  stage: test ✅
  script:
    - trivy image $IMAGE_COSMO
  allow_failure: true

grype scan:
  image:
    name: aramis-nexus.aizoon.it:5000/esra/grype:v0.32.0
    entrypoint: ['']
  stage: test ✅
  script:
    - grype $IMAGE_COSMO
  allow_failure: true

test:
  image: cypress/browsers:node16.13.2-chrome100-ff98
  stage: test ✅
  variables:
    NODE_ENV: 'CI'
  before_script:
    - yarn
  script:
    - yarn test
tag:
  image: aramis-nexus.aizoon.it:5000/esra/docker:20.10.8
  stage: tag 🔖
  only:
    - tags
  script:
    - docker tag $IMAGE_COSMO $TAG_IMAGE && docker push $TAG_IMAGE

deploy develop:
  image: aramis-nexus.aizoon.it:5000/ansible
  stage: deploy 🚀
  when: manual
  environment:
    name: develop
    url: https://172.17.0.46:3000
  script:
    - cd ansible
    - chmod go-rwx .
    - ansible-playbook --vault-password-file $VAULT_PASS --extra-vars "{'image_name':'$IMAGE_COSMO'}" deploy.yml

deploy storybook:
  stage: deploy 🚀
  when: manual
  variables:
    LINKER: node-modules
  before_script:
    - yarn
  script:
    - yarn workspace cosmo-storybook build-storybook
  artifacts:
    expire_in: 1 day
    paths:
      - packages/cosmo-storybook/dist/
#pages:
#  stage: pages 🌎
#  when: on_success
#  needs:
#    - deploy storybook
#  dependencies:
#    - deploy storybook
#  script:
#    - mkdir public
#    - cp -r packages/cosmo-storybook/dist/* public
#  artifacts:
#    paths:
#      - public
